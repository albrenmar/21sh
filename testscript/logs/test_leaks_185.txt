==75130== Memcheck, a memory error detector
==75130== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75130== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==75130== Command: ./42sh
==75130== 
==75130== Syscall param msg->desc.port.name points to uninitialised byte(s)
==75130==    at 0x10043D34A: mach_msg_trap (in /usr/lib/system/libsystem_kernel.dylib)
==75130==    by 0x10043C796: mach_msg (in /usr/lib/system/libsystem_kernel.dylib)
==75130==    by 0x100436485: task_set_special_port (in /usr/lib/system/libsystem_kernel.dylib)
==75130==    by 0x1005D210E: _os_trace_create_debug_control_port (in /usr/lib/system/libsystem_trace.dylib)
==75130==    by 0x1005D2458: _libtrace_init (in /usr/lib/system/libsystem_trace.dylib)
==75130==    by 0x10013B9DF: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==75130==    by 0x100069A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==75130==    by 0x100069C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==75130==    by 0x1000654A9: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==75130==    by 0x100065440: ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==75130==    by 0x100064523: ImageLoader::processInitializers(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) (in /usr/lib/dyld)
==75130==    by 0x1000645B8: ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) (in /usr/lib/dyld)
==75130==  Address 0x1048dcd2c is on thread 1's stack
==75130==  in frame #2, created by task_set_special_port (???:)
==75130== 
42sh: ${:=test}: bad substitution
==75130== Invalid read of size 8
==75130==    at 0x10000472B: convert_list (convert_list.c:102)
==75130==    by 0x10000127A: main_loop (main.c:80)
==75130==    by 0x1000013D0: main (main.c:110)
==75130==  Address 0x100c0efc8 is 8 bytes inside a block of size 32 free'd
==75130==    at 0x1000EAE2B: free (in /Users/mjose/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==75130==    by 0x10002BE4C: ft_free (garbage_free.c:64)
==75130==    by 0x100021DE9: ft_lstdelcmd (cmd_expan_checker.c:29)
==75130==    by 0x10002236D: rmv_invalid_expansion (cmd_tools.c:74)
==75130==    by 0x100021F7C: re_format_line (cmd_expan_checker.c:69)
==75130==    by 0x100022108: check_exp_error (cmd_expan_checker.c:105)
==75130==    by 0x100001265: main_loop (main.c:78)
==75130==    by 0x1000013D0: main (main.c:110)
==75130==  Block was alloc'd at
==75130==    at 0x1000EAA46: malloc (in /Users/mjose/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==75130==    by 0x10002BFAC: ft_malloc (garbage_malloc.c:56)
==75130==    by 0x100002A43: create_new_list (ft_modif_list.c:19)
==75130==    by 0x10000256C: ft_parseur (ft_parseur.c:117)
==75130==    by 0x100001206: main_loop (main.c:72)
==75130==    by 0x1000013D0: main (main.c:110)
==75130== 
==75130== Invalid read of size 1
==75130==    at 0x100002FCB: its_indir (its_token.c:43)
==75130==    by 0x100004733: convert_list (convert_list.c:102)
==75130==    by 0x10000127A: main_loop (main.c:80)
==75130==    by 0x1000013D0: main (main.c:110)
==75130==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==75130== 
==75130== 
==75130== Process terminating with default action of signal 11 (SIGSEGV)
==75130==  Access not within mapped region at address 0x0
==75130==    at 0x100002FCB: its_indir (its_token.c:43)
==75130==    by 0x100004733: convert_list (convert_list.c:102)
==75130==    by 0x10000127A: main_loop (main.c:80)
==75130==    by 0x1000013D0: main (main.c:110)
==75130==  If you believe this happened as a result of a stack
==75130==  overflow in your program's main thread (unlikely but
==75130==  possible), you can try to increase the size of the
==75130==  main thread stack using the --main-stacksize= flag.
==75130==  The main thread stack size used in this run was 8388608.
==75130== 
==75130== HEAP SUMMARY:
==75130==     in use at exit: 31,088 bytes in 409 blocks
==75130==   total heap usage: 1,512 allocs, 1,103 frees, 78,947 bytes allocated
==75130== 
==75130== 72 bytes in 3 blocks are possibly lost in loss record 106 of 138
==75130==    at 0x1000EB0B2: calloc (in /Users/mjose/.brew/Cellar/valgrind/3.13.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==75130==    by 0x100646832: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==75130==    by 0x100659D6A: map_images (in /usr/lib/libobjc.A.dylib)
==75130==    by 0x10005903B: dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*), bool, bool) (in /usr/lib/dyld)
==75130==    by 0x100059255: dyld::registerObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*)) (in /usr/lib/dyld)
==75130==    by 0x10029400A: _dyld_objc_notify_register (in /usr/lib/system/libdyld.dylib)
==75130==    by 0x100646072: _objc_init (in /usr/lib/libobjc.A.dylib)
==75130==    by 0x10022768D: _os_object_init (in /usr/lib/system/libdispatch.dylib)
==75130==    by 0x10022763A: libdispatch_init (in /usr/lib/system/libdispatch.dylib)
==75130==    by 0x10013B9D5: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==75130==    by 0x100069A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==75130==    by 0x100069C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==75130== 
==75130== LEAK SUMMARY:
==75130==    definitely lost: 0 bytes in 0 blocks
==75130==    indirectly lost: 0 bytes in 0 blocks
==75130==      possibly lost: 72 bytes in 3 blocks
==75130==    still reachable: 13,138 bytes in 253 blocks
==75130==         suppressed: 17,878 bytes in 153 blocks
==75130== Reachable blocks (those to which a pointer was found) are not shown.
==75130== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==75130== 
==75130== For counts of detected and suppressed errors, rerun with: -v
==75130== Use --track-origins=yes to see where uninitialised values come from
==75130== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 12 from 12)
