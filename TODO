MISC
-verifier operateurs fin de ligne
-tester 42sh avec correction du 42sh
- all leaks, norme, gcc -wall -wextra -werror
- proteger si ficher ~/.hist extisteais pas.
-verifier liens symboliques marchent bien sur proompt et pwd
-new tmpenv
-alias a=\caca doit etre set sans '\'
-fix alias sub='(echo abc|)'
-segfault "hello="
-segfault " a && a " ast

  liste comandes difficiles:
-"HAHAHAHEHHE=toto HAHA=XD env | grep HAHA ; a=b c=t caca=xd ; HIHIHI=ta HIHIHIHIHIH=ti env | grep HIHIHI ; set | tail -3"
-"mkdir test ; cd test ; ls -a ; ls | cat | wc -c > fifi ; cat fifi"
-"HOME=XD env | grep HOME= ; a=b ; env -i || ls && HOME=XDA env | grep HOME= || c=d ; HOME=XDO cd"
-"ls | ./42sh" 
-"env -i PATH=/tmp ./42sh"
-"HOME=XD cd ; a=b || ls && HOME=XDA cd || c=d"
-"a=hello b=world; b=42 echo ${a}_${b} && echo ${b}



                                                                    ########ERREURS########

$> rm -rf tempdir; test ! -d tempdir && echo "tempdir removed"
tempdir removed
====>SEGFAULT!!!!!

$> ONESHOT= env | grep ONESHOT
ONESHOT=
====> SEGFAULT

########TEST AST#########


###A VERIFIER###
$> a='hello' b=''; unset c
$> test ${a} && echo ok || echo wrong
ok
$> test ${b} && echo ok || echo wrong
wrong
$> test ${c} && echo ok || echo wrong
wrong
$> test -z ${a} && echo ok || echo wrong
wrong
$> test -z ${b} && echo ok || echo wrong
ok
$> test -z ${c} && echo ok || echo wrong
ok
##################
$> test ${first} -ne ${second} && echo ok || echo wrong
ok
====>expected integer :
====>wrong
$> test -1 -gt -2 && echo ok || echo wrong
ok
====>too many arguments
====>wrong
$> test -2 -lt -2 && echo ok || echo wrong
wrong
====>too many arguments
====>wrong


########QUOTING#########


$> echo 'foo\
> bar' | cat -e
foo\$
bar$
$>
====>foo\bar$
$> echo "foo\
> bar" | cat -e
foobar$
$>
====>foo\bar'$
====>baz$
$> l\
> s \
> -lat
{{ Output of "ls -lat" command }}
====>42sh: command l\ not found
$> echo abc \| cat -e
abc | cat -e
$> echo abc \\| cat -e
abc \$

######ALIAS######

$> alias hello='echo "hello, world"'
$> hello | cat -e
hello, world$
====> LEAKS
$> alias hello
{{ Print the alias definition for 'hello'. Something like: hello='echo "hello, world!"' }}
$> alias hello=
$> hello
====> INVALID FREE
$> alias hello
{{ Print the alias definition for 'hello'. Something like: hello= }}
$> alias sub='(echo abc|'
====> LEAKS
$> sub cat -e)
abc$
====> LEAKS + 42sh: command sub not found


$> alias e='g'
$> alias f='e'
$> alias g='echo "infinite loop"; e'
$> g
{{ Error message mentionning that the 'g' command is not found }}
====> LEAKS
$> alias hello='echo "hello, world!"'
$> unalias hello
$> hello
{{ Error message indicating that the 'hello' command is not found }}
====> LEAKS


#######TEST 21SH#######


$> cat << EO\
> F
heredoc> hi
heredoc> EOF
hi
====> NE FONCTIONNE PAS (‘\’)


$> exit abc
{{ Message d'erreur indiquant qu'une valeur numérique est attendue }}
$> echo ${?}
{{ Code de retour différent de 0 }}
====> LEAKS


$> cd -L /tmp; cd -P ..
$> pwd
/private
====> Mauvais repertoire (‘/‘)


$> a=hello b=world; b=42 echo ${a}_${b} && echo ${b}
hello_world
world
====> 42


$> directory=/ ls_opt=-atr
$> ls ${ls_opt} ${directory}
{{ Sortie de la commande "ls -atr" sur la racine du système }}
====> ls: fts_open: No such file or directory


$> set | grep -E '(a|b)='
a=hello
b=world
$> env | grep -E '(a|b)='
====> LEAKS
$> env | grep -E '(a|b)='
$> set | grep -E '(a|b)='


$> env | grep ONESHOT


$> ls -lR /usr >fifo 2>&1 &
====> Resultat different
$> jobs
{{ Message indiquant que la commande "ls" est en cours d'exécution }}
$>
$> emacs -nw &
$> emacs -nw &
$> emacs -nw &
$> emacs -nw &
$> emacs -nw &
$> jobs
{{ Message indiquant que 5 instances d'emacs sont stoppés en arrière-plan }}
$>
$> fg %{{ un des emacs job numbe
$> jobs
{{ La commande "ls" lancé plus haut doit être la seule restante }}
====> tout les process emacs restent lancés


$> cat -e {{ Sortie de la commande "ls". N'attendez pas la fin, coupez l'affichage avec CTRL-C }}
$> jobs
$>
====> La commande ls ne ce relance pas
$> ls -Rl / 2>&1
{{ Affichage de la commande "ls". N'attendez pas la fin, appuyez sur CTRL-Z }}
{{ Message indiquant que la commande est suspendue }}
$> jobs
{{ Message indiquant que la commande est suspendue }}
$>
$> ps a | grep "ls -Rl /" | grep -v 'grep' | cut -d ' ' -f 2
{{ PID de la commande "ls" du test précédent }}
$> kill {{ PID de la commande "ls" du test précédent }}
$> jobs
{{ Message indiquant que la commande s'est terminé }}
$>
$> jobs
$> ps a | grep "ls -Rl /" | grep -v 'grep'
$>
